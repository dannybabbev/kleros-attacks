{
  "contractName": "ArbitrableTransaction",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appeal",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "arbitratorExtraData",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyA",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "timeOutByPartyA",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "status",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyB",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "rule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyAFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyBFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "arbitrator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timeout",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "timeOutByPartyB",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastInteraction",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "payArbitrationFeeByPartyA",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "amount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "disputeID",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "payArbitrationFeeByPartyB",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "submitEvidence",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "name": "_hashContract",
          "type": "bytes32"
        },
        {
          "name": "_timeout",
          "type": "uint256"
        },
        {
          "name": "_partyB",
          "type": "address"
        },
        {
          "name": "_arbitratorExtraData",
          "type": "bytes"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_party",
          "type": "uint8"
        }
      ],
      "name": "HasToPayFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_rulingOptions",
          "type": "string"
        }
      ],
      "name": "Dispute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "Ruling",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_party",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "Evidence",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_contractHash",
          "type": "bytes32"
        }
      ],
      "name": "ContractHash",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amountReimbursed",
          "type": "uint256"
        }
      ],
      "name": "reimburse",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260405162001abd38038062001abd83398101806040528101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805182019291905050508484848484848185826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160019080519060200190620000b09291906200019c565b507f1892820d22f2ab2b60795935d39550f42562bf8862a0b3c2193b095baa40af218160405180826000191660001916815260200191505060405180910390a15050508260028190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505034600a6000828254019250508190555050505050506200024b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001df57805160ff191683800117855562000210565b8280016001018555821562000210579182015b828111156200020f578251825591602001919060010190620001f2565b5b5090506200021f919062000223565b5090565b6200024891905b80821115620002445760008160009055506001016200022a565b5090565b90565b611862806200025b6000396000f300608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063069fae2a146101175780630c7ac7b61461017357806310e1d8ca1461020357806319e2641e1461025a5780631b9265b814610271578063200d2ed21461028857806329040113146102c1578063311a6c56146103185780634a44c2e41461034f5780634b40c9741461037c578063512491f1146103a75780636cc6cde1146103d257806370dea79a14610429578063853c80ce146104545780638f71a2651461046b578063a010963114610496578063aa8c217c146104a0578063b0a1e2b4146104cb578063b1bcce3a146104f6578063bac91e2e14610500575b600080fd5b610171600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610569565b005b34801561017f57600080fd5b50610188610738565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c85780820151818401526020810190506101ad565b50505050905090810190601f1680156101f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020f57600080fd5b506102186107d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026657600080fd5b5061026f6107fc565b005b34801561027d57600080fd5b506102866108b3565b005b34801561029457600080fd5b5061029d610984565b604051808260048111156102ad57fe5b60ff16815260200191505060405180910390f35b3480156102cd57600080fd5b506102d6610997565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032457600080fd5b5061034d60048036038101908080359060200190929190803590602001909291905050506109bd565b005b34801561035b57600080fd5b5061037a60048036038101908080359060200190929190505050610a75565b005b34801561038857600080fd5b50610391610b5e565b6040518082815260200191505060405180910390f35b3480156103b357600080fd5b506103bc610b64565b6040518082815260200191505060405180910390f35b3480156103de57600080fd5b506103e7610b6a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561043557600080fd5b5061043e610b8f565b6040518082815260200191505060405180910390f35b34801561046057600080fd5b50610469610b95565b005b34801561047757600080fd5b50610480610c4c565b6040518082815260200191505060405180910390f35b61049e610c52565b005b3480156104ac57600080fd5b506104b5610ee1565b6040518082815260200191505060405180910390f35b3480156104d757600080fd5b506104e0610ee7565b6040518082815260200191505060405180910390f35b6104fe610eed565b005b34801561050c57600080fd5b50610567600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061117c565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106125750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561061d57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166349912f8834600854846040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106d05780820151818401526020810190506106b5565b50505050905090810190601f1680156106fd5780820380516001836020036101000a031916815260200191505b5093505050506000604051808303818588803b15801561071c57600080fd5b505af1158015610730573d6000803e3d6000fd5b505050505050565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107ce5780601f106107a3576101008083540402835291602001916107ce565b820191906000526020600020905b8154815290600101906020018083116107b157829003601f168201915b505050505081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561085857600080fd5b6002600481111561086557fe5b600960009054906101000a900460ff16600481111561088057fe5b14151561088c57600080fd5b6002546007540142101515156108a157600080fd5b6108b1600854600160ff16611373565b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561090f57600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a549081150290604051600060405180830381858888f19350505050158015610979573d6000803e3d6000fd5b506000600a81905550565b600960009054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a1857600080fd5b813373ffffffffffffffffffffffffffffffffffffffff167f394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e75622276836040518082815260200191505060405180910390a3610a718282611373565b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ad157600080fd5b600a548111151515610ae257600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610b4a573d6000803e3d6000fd5b5080600a6000828254039250508190555050565b60055481565b60065481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bf157600080fd5b60016004811115610bfe57fe5b600960009054906101000a900460ff166004811115610c1957fe5b141515610c2557600080fd5b600254600754014210151515610c3a57600080fd5b610c4a600854600260ff16611373565b565b60075481565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cb057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7434ea960016040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610da35780601f10610d7857610100808354040283529160200191610da3565b820191906000526020600020905b815481529060010190602001808311610d8657829003601f168201915b505092505050602060405180830381600087803b158015610dc357600080fd5b505af1158015610dd7573d6000803e3d6000fd5b505050506040513d6020811015610ded57600080fd5b810190808051906020019092919050505090503460056000828254019250508190555080600554141515610e2057600080fd5b60036004811115610e2d57fe5b600960009054906101000a900460ff166004811115610e4857fe5b101515610e5457600080fd5b42600781905550806006541015610ed4576002600960006101000a81548160ff02191690836004811115610e8457fe5b02179055507fba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568600160405180826001811115610ebc57fe5b60ff16815260200191505060405180910390a1610ede565b610edd8161145c565b5b50565b600a5481565b60085481565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f4b57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7434ea960016040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561103e5780601f106110135761010080835404028352916020019161103e565b820191906000526020600020905b81548152906001019060200180831161102157829003601f168201915b505092505050602060405180830381600087803b15801561105e57600080fd5b505af1158015611072573d6000803e3d6000fd5b505050506040513d602081101561108857600080fd5b8101908080519060200190929190505050905034600660008282540192505081905550806006541415156110bb57600080fd5b600360048111156110c857fe5b600960009054906101000a900460ff1660048111156110e357fe5b1015156110ef57600080fd5b4260078190555080600554101561116f576001600960006101000a81548160ff0219169083600481111561111f57fe5b02179055507fba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e56860006040518082600181111561115757fe5b60ff16815260200191505060405180910390a1611179565b6111788161145c565b5b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806112255750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561123057600080fd5b6003600481111561123d57fe5b600960009054906101000a900460ff16600481111561125857fe5b1015151561126557600080fd5b6008546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c3384604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561133557808201518184015260208101905061131a565b50505050905090810190601f1680156113625780820380516001836020036101000a031916815260200191505b50935050505060405180910390a350565b61137d82826116f0565b600160ff168114156113e857600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a549081150290604051600060405180830381858888f1935050505050611450565b600260ff1681141561144f57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a549081150290604051600060405180830381858888f19350505050505b5b6000600a819055505050565b6003600960006101000a81548160ff0219169083600481111561147b57fe5b02179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c13517e182600260016040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808360ff1681526020018060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561157f5780601f106115545761010080835404028352916020019161157f565b820191906000526020600020905b81548152906001019060200180831161156257829003601f168201915b505093505050506020604051808303818588803b15801561159f57600080fd5b505af11580156115b3573d6000803e3d6000fd5b50505050506040513d60208110156115ca57600080fd5b81019080805190602001909291905050506008819055506008546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a126116040805190810160405280601981526020017f506172747920412077696e733b506172747920422077696e73000000000000008152506040518080602001828103825283818151815260200191508051906020019080838360005b838110156116b3578082015181840152602081019050611698565b50505050905090810190601f1680156116e05780820380516001836020036101000a031916815260200191505b509250505060405180910390a350565b6008548214151561170057600080fd5b600260ff16811115151561171357600080fd5b600160ff1681141561179257600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6006546005541161176e57600654611772565b6005545b9081150290604051600060405180830381858888f193505050505061180e565b600260ff1681141561180d57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600654600554116117ed576006546117f1565b6005545b9081150290604051600060405180830381858888f19350505050505b5b6004600960006101000a81548160ff0219169083600481111561182d57fe5b021790555050505600a165627a7a723058203a52cfb8be5b4e285256e30d2cf235f57ca6eaaeedfe4cc66fef25cd1fcba5b80029",
  "deployedBytecode": "0x608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063069fae2a146101175780630c7ac7b61461017357806310e1d8ca1461020357806319e2641e1461025a5780631b9265b814610271578063200d2ed21461028857806329040113146102c1578063311a6c56146103185780634a44c2e41461034f5780634b40c9741461037c578063512491f1146103a75780636cc6cde1146103d257806370dea79a14610429578063853c80ce146104545780638f71a2651461046b578063a010963114610496578063aa8c217c146104a0578063b0a1e2b4146104cb578063b1bcce3a146104f6578063bac91e2e14610500575b600080fd5b610171600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610569565b005b34801561017f57600080fd5b50610188610738565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c85780820151818401526020810190506101ad565b50505050905090810190601f1680156101f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020f57600080fd5b506102186107d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026657600080fd5b5061026f6107fc565b005b34801561027d57600080fd5b506102866108b3565b005b34801561029457600080fd5b5061029d610984565b604051808260048111156102ad57fe5b60ff16815260200191505060405180910390f35b3480156102cd57600080fd5b506102d6610997565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032457600080fd5b5061034d60048036038101908080359060200190929190803590602001909291905050506109bd565b005b34801561035b57600080fd5b5061037a60048036038101908080359060200190929190505050610a75565b005b34801561038857600080fd5b50610391610b5e565b6040518082815260200191505060405180910390f35b3480156103b357600080fd5b506103bc610b64565b6040518082815260200191505060405180910390f35b3480156103de57600080fd5b506103e7610b6a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561043557600080fd5b5061043e610b8f565b6040518082815260200191505060405180910390f35b34801561046057600080fd5b50610469610b95565b005b34801561047757600080fd5b50610480610c4c565b6040518082815260200191505060405180910390f35b61049e610c52565b005b3480156104ac57600080fd5b506104b5610ee1565b6040518082815260200191505060405180910390f35b3480156104d757600080fd5b506104e0610ee7565b6040518082815260200191505060405180910390f35b6104fe610eed565b005b34801561050c57600080fd5b50610567600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061117c565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106125750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561061d57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166349912f8834600854846040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106d05780820151818401526020810190506106b5565b50505050905090810190601f1680156106fd5780820380516001836020036101000a031916815260200191505b5093505050506000604051808303818588803b15801561071c57600080fd5b505af1158015610730573d6000803e3d6000fd5b505050505050565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107ce5780601f106107a3576101008083540402835291602001916107ce565b820191906000526020600020905b8154815290600101906020018083116107b157829003601f168201915b505050505081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561085857600080fd5b6002600481111561086557fe5b600960009054906101000a900460ff16600481111561088057fe5b14151561088c57600080fd5b6002546007540142101515156108a157600080fd5b6108b1600854600160ff16611373565b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561090f57600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a549081150290604051600060405180830381858888f19350505050158015610979573d6000803e3d6000fd5b506000600a81905550565b600960009054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a1857600080fd5b813373ffffffffffffffffffffffffffffffffffffffff167f394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e75622276836040518082815260200191505060405180910390a3610a718282611373565b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ad157600080fd5b600a548111151515610ae257600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610b4a573d6000803e3d6000fd5b5080600a6000828254039250508190555050565b60055481565b60065481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bf157600080fd5b60016004811115610bfe57fe5b600960009054906101000a900460ff166004811115610c1957fe5b141515610c2557600080fd5b600254600754014210151515610c3a57600080fd5b610c4a600854600260ff16611373565b565b60075481565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cb057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7434ea960016040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610da35780601f10610d7857610100808354040283529160200191610da3565b820191906000526020600020905b815481529060010190602001808311610d8657829003601f168201915b505092505050602060405180830381600087803b158015610dc357600080fd5b505af1158015610dd7573d6000803e3d6000fd5b505050506040513d6020811015610ded57600080fd5b810190808051906020019092919050505090503460056000828254019250508190555080600554141515610e2057600080fd5b60036004811115610e2d57fe5b600960009054906101000a900460ff166004811115610e4857fe5b101515610e5457600080fd5b42600781905550806006541015610ed4576002600960006101000a81548160ff02191690836004811115610e8457fe5b02179055507fba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568600160405180826001811115610ebc57fe5b60ff16815260200191505060405180910390a1610ede565b610edd8161145c565b5b50565b600a5481565b60085481565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f4b57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7434ea960016040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561103e5780601f106110135761010080835404028352916020019161103e565b820191906000526020600020905b81548152906001019060200180831161102157829003601f168201915b505092505050602060405180830381600087803b15801561105e57600080fd5b505af1158015611072573d6000803e3d6000fd5b505050506040513d602081101561108857600080fd5b8101908080519060200190929190505050905034600660008282540192505081905550806006541415156110bb57600080fd5b600360048111156110c857fe5b600960009054906101000a900460ff1660048111156110e357fe5b1015156110ef57600080fd5b4260078190555080600554101561116f576001600960006101000a81548160ff0219169083600481111561111f57fe5b02179055507fba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e56860006040518082600181111561115757fe5b60ff16815260200191505060405180910390a1611179565b6111788161145c565b5b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806112255750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561123057600080fd5b6003600481111561123d57fe5b600960009054906101000a900460ff16600481111561125857fe5b1015151561126557600080fd5b6008546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c3384604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561133557808201518184015260208101905061131a565b50505050905090810190601f1680156113625780820380516001836020036101000a031916815260200191505b50935050505060405180910390a350565b61137d82826116f0565b600160ff168114156113e857600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a549081150290604051600060405180830381858888f1935050505050611450565b600260ff1681141561144f57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a549081150290604051600060405180830381858888f19350505050505b5b6000600a819055505050565b6003600960006101000a81548160ff0219169083600481111561147b57fe5b02179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c13517e182600260016040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808360ff1681526020018060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561157f5780601f106115545761010080835404028352916020019161157f565b820191906000526020600020905b81548152906001019060200180831161156257829003601f168201915b505093505050506020604051808303818588803b15801561159f57600080fd5b505af11580156115b3573d6000803e3d6000fd5b50505050506040513d60208110156115ca57600080fd5b81019080805190602001909291905050506008819055506008546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a126116040805190810160405280601981526020017f506172747920412077696e733b506172747920422077696e73000000000000008152506040518080602001828103825283818151815260200191508051906020019080838360005b838110156116b3578082015181840152602081019050611698565b50505050905090810190601f1680156116e05780820380516001836020036101000a031916815260200191505b509250505060405180910390a350565b6008548214151561170057600080fd5b600260ff16811115151561171357600080fd5b600160ff1681141561179257600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6006546005541161176e57600654611772565b6005545b9081150290604051600060405180830381858888f193505050505061180e565b600260ff1681141561180d57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600654600554116117ed576006546117f1565b6005545b9081150290604051600060405180830381858888f19350505050505b5b6004600960006101000a81548160ff0219169083600481111561182d57fe5b021790555050505600a165627a7a723058203a52cfb8be5b4e285256e30d2cf235f57ca6eaaeedfe4cc66fef25cd1fcba5b80029",
  "sourceMap": "489:2086:6:-;;;1115:264;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1272:11;1284:13;1298:8;1307:7;1315:20;2483:11:13;2495:20;2516:13;3411:11:2;3400:10;;:22;;;;;;;;;;;;;;;;;;3445:20;3425:19;:40;;;;;;;;;;;;:::i;:::-;;3475:27;3488:13;3475:27;;;;;;;;;;;;;;;;;;;;;;;;3295:214;;;2549:8:13;2541:7;:16;;;;2574:10;2567:6;;:17;;;;;;;;;;;;;;;;;;2601:7;2594:6;;:14;;;;;;;;;;;;;;;;;;2337:278;;;;;1363:9:6;1355:6;;:17;;;;;;;;;;;1115:264;;;;;489:2086;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "489:2086:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6189:125:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;691:32:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;691:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;691:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;845:21:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;845:21:13;;;;;;;;;;;;;;;;;;;;;;;;;;;5162:195;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5162:195:13;;;;;;1488:84:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1488:84:6;;;;;;1212:20:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1212:20:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;872:21:13;;;;;;;;;;;;;;;;;;;;;;;;;;;3912:178:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3912:178:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1744:184:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1744:184:6;;;;;;;;;;;;;;;;;;;;;;;;;;899:21:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;899:21:13;;;;;;;;;;;;;;;;;;;;;;;960;;8:9:-1;5:2;;;30:1;27;20:12;5:2;960:21:13;;;;;;;;;;;;;;;;;;;;;;;657:28:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;657:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;726:19:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;726:19:13;;;;;;;;;;;;;;;;;;;;;;;5431:195;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5431:195:13;;;;;;1021:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1021:27:13;;;;;;;;;;;;;;;;;;;;;;;2974:770;;;;;;621:18:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;621:18:6;;;;;;;;;;;;;;;;;;;;;;;1101:21:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1101:21:13;;;;;;;;;;;;;;;;;;;;;;;3930:770;;;;;;5758:168;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5758:168:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6189:125;1668:6;;;;;;;;;;;1656:18;;:10;:18;;;:40;;;;1690:6;;;;;;;;;;;1678:18;;:10;:18;;;1656:40;1648:49;;;;;;;;6251:10;;;;;;;;;;;:17;;;6275:9;6286;;6296:10;6251:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6251:56:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6251:56:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6251:56:13;;;;;6189:125;:::o;691:32:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;845:21:13:-;;;;;;;;;;;;;:::o;5162:195::-;1551:6;;;;;;;;;;;1539:18;;:10;:18;;;1531:27;;;;;;;;5226:20;5218:28;;;;;;;;:6;;;;;;;;;;;:28;;;;;;;;;5210:37;;;;;;;;5286:7;;5270:15;;:23;5265:3;:28;;5257:37;;;;;;;;5313;5327:9;;1315:1;5313:37;;:13;:37::i;:::-;5162:195::o;1488:84:6:-;1551:6:13;;;;;;;;;;;1539:18;;:10;:18;;;1531:27;;;;;;;;1524:6:6;;;;;;;;;;;:15;;:23;1540:6;;1524:23;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1524:23:6;1564:1;1557:6;:8;;;;1488:84::o;1212:20:13:-;;;;;;;;;;;;;:::o;872:21::-;;;;;;;;;;;;;:::o;3912:178:2:-;853:10;;;;;;;;;;;833:31;;:10;:31;;;825:40;;;;;;;;4012:10;4000;3982:49;;;4023:7;3982:49;;;;;;;;;;;;;;;;;;4050:33;4064:10;4075:7;4050:13;:33::i;:::-;3912:178;;:::o;1744:184:6:-;1610:6:13;;;;;;;;;;;1598:18;;:10;:18;;;1590:27;;;;;;;;1835:6:6;;1816:17;:25;;1808:34;;;;;;;;1852:6;;;;;;;;;;;:15;;:34;1868:17;1852:34;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1852:34:6;1904:17;1896:6;;:25;;;;;;;;;;;1744:184;:::o;899:21:13:-;;;;:::o;960:::-;;;;:::o;657:28:2:-;;;;;;;;;;;;;:::o;726:19:13:-;;;;:::o;5431:195::-;1610:6;;;;;;;;;;;1598:18;;:10;:18;;;1590:27;;;;;;;;5495:20;5487:28;;;;;;;;:6;;;;;;;;;;;:28;;;;;;;;;5479:37;;;;;;;;5555:7;;5539:15;;:23;5534:3;:28;;5526:37;;;;;;;;5582;5596:9;;1352:1;5582:37;;:13;:37::i;:::-;5431:195::o;1021:27::-;;;;:::o;2974:770::-;3040:20;1551:6;;;;;;;;;;;1539:18;;:10;:18;;;1531:27;;;;;;;;3061:10;;;;;;;;;;;:26;;;3088:19;3061:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3061:47:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3061:47:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3061:47:13;;;;;;;;;;;;;;;;3040:68;;3129:9;3118;;:20;;;;;;;;;;;3169:15;3156:9;;:28;3148:37;;;;;;;;3271:21;3264:28;;;;;;;;:6;;;;;;;;;;;:28;;;;;;;;;3256:37;;;;;;;;3377:3;3361:15;:19;;;;3406:15;3394:9;;:27;3390:348;;;3549:20;3542:6;;:27;;;;;;;;;;;;;;;;;;;;;;;;3583:25;3595:12;3583:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;3390:348;;;3698:29;3711:15;3698:12;:29::i;:::-;3390:348;2974:770;:::o;621:18:6:-;;;;:::o;1101:21:13:-;;;;:::o;3930:770::-;3996:20;1610:6;;;;;;;;;;;1598:18;;:10;:18;;;1590:27;;;;;;;;4017:10;;;;;;;;;;;:26;;;4044:19;4017:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4017:47:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4017:47:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4017:47:13;;;;;;;;;;;;;;;;3996:68;;4085:9;4074;;:20;;;;;;;;;;;4125:15;4112:9;;:28;4104:37;;;;;;;;4227:21;4220:28;;;;;;;;:6;;;;;;;;;;;:28;;;;;;;;;4212:37;;;;;;;;4333:3;4317:15;:19;;;;4362:15;4350:9;;:27;4346:348;;;4505:20;4498:6;;:27;;;;;;;;;;;;;;;;;;;;;;;;4539:25;4551:12;4539:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;4346:348;;;4654:29;4667:15;4654:12;:29::i;:::-;4346:348;3930:770;:::o;5758:168::-;1668:6;;;;;;;;;;;1656:18;;:10;:18;;;:40;;;;1690:6;;;;;;;;;;;1678:18;;:10;:18;;;1656:40;1648:49;;;;;;;;5836:21;5828:29;;;;;;;;:6;;;;;;;;;;;:29;;;;;;;;;;5820:38;;;;;;;;5888:9;;5877:10;;;;;;;;;;;5868:51;;;5898:10;5909:9;5868:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5868:51:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5758:168;:::o;2271:291:6:-;2344:39;2364:10;2375:7;2344:19;:39::i;:::-;1315:1:13;2397:21:6;;:7;:21;2393:131;;;2432:6;;;;;;;;;;;:11;;:19;2444:6;;2432:19;;;;;;;;;;;;;;;;;;;;;;;;2393:131;;;1352:1:13;2470:21:6;;:7;:21;2466:58;;;2505:6;;;;;;;;;;;:11;;:19;2517:6;;2505:19;;;;;;;;;;;;;;;;;;;;;;;;2466:58;2393:131;2554:1;2547:6;:8;;;;2271:291;;:::o;4822:260:13:-;4893:21;4886:6;;:28;;;;;;;;;;;;;;;;;;;;;;;;4934:10;;;;;;;;;;;:24;;;4965:16;1278:1;5001:19;4934:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4934:87:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4934:87:13;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4934:87:13;;;;;;;;;;;;;;;;4924:9;:97;;;;5050:9;;5039:10;;;;;;;;;;;5031:44;;;5060:14;;;;;;;;;;;;;;;;;;5031:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5031:44:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4822:260;:::o;6657:660::-;6750:9;;6738:10;:21;6730:30;;;;;;;;1278:1;6778:26;;:7;:26;;6770:35;;;;;;;;1315:1;6951:21;;:7;:21;6947:331;;;6986:6;;;;;;;;;;;:11;;:58;7010:9;;6998;;:21;:45;;7034:9;;6998:45;;;7022:9;;6998:45;6986:58;;;;;;;;;;;;;;;;;;;;;;;;6947:331;;;1352:1;7185:21;;:7;:21;7181:97;;;7220:6;;;;;;;;;;;:11;;:58;7244:9;;7232;;:21;:45;;7268:9;;7232:45;;;7256:9;;7232:45;7220:58;;;;;;;;;;;;;;;;;;;;;;;;7181:97;6947:331;7295:15;7288:6;;:22;;;;;;;;;;;;;;;;;;;;;;;;6657:660;;:::o",
  "source": "/**\n *  @title Arbitrable Transaction\n *  @author Clément Lesaege - <clement@lesaege.com>\n *  Bug Bounties: This code hasn't undertaken a bug bounty program yet.\n */\n\n\npragma solidity ^0.4.15;\nimport \"./TwoPartyArbitrable.sol\";\n\n/** @title Arbitrable Transaction\n *  This is a a contract for an arbitrated transaction which can be reversed by the arbitrator.\n *  This can be used for buying goods, services and for paying freelancers.\n *  Party A is the payer. Party B is the payee.\n */\n contract ArbitrableTransaction is TwoPartyArbitrable {\n    string constant RULING_OPTIONS = \"Reimburse partyA;Pay partyB\";\n    \n    uint public amount; // Amount sent by party A.\n    \n    \n    /** @dev Constructor. Choose the arbitrator. Should be called by party A (the payer).\n     *  @param _arbitrator The arbitrator of the contract.\n     *  @param _hashContract Keccak hash of the plain English contract.\n     *  @param _timeout Time after which a party automatically loose a dispute.\n     *  @param _partyB The recipient of the transaction.\n     *  @param _arbitratorExtraData Extra data for the arbitrator.\n     */\n    function ArbitrableTransaction(Arbitrator _arbitrator, bytes32 _hashContract, uint _timeout, address _partyB, bytes _arbitratorExtraData) TwoPartyArbitrable(_arbitrator,_hashContract,_timeout,_partyB,_arbitratorExtraData) payable {\n        amount+=msg.value;\n    }\n\n    /** @dev Pay the party B. To be called when the good is delivered or the service rendered.\n     */\n    function pay() onlyPartyA {\n        partyB.transfer(amount);\n        amount=0;\n    }\n    \n    /** @dev Reimburse party A. To be called if the good or service can't be fully provided.\n     *  @param _amountReimbursed Amount to reimburse in wei.\n     */\n    function reimburse(uint _amountReimbursed) onlyPartyB {\n        require(_amountReimbursed<=amount);\n        partyA.transfer(_amountReimbursed);\n        amount-=_amountReimbursed;\n    }\n    \n    /** @dev Execute a ruling of a dispute. It reimburse the fee to the winning party.\n     *  This need to be extended by contract inheriting from it.\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\n     *  @param _ruling Ruling given by the arbitrator. 1 : Reimburse the partyA. 2 : Pay the partyB.\n     */\n    function executeRuling(uint _disputeID, uint _ruling) internal {\n        super.executeRuling(_disputeID,_ruling);\n        if (_ruling==PARTY_A_WINS)\n            partyA.send(amount);\n        else if (_ruling==PARTY_B_WINS)\n            partyB.send(amount);\n            \n        amount=0;\n    }\n    \n    \n }\n \n",
  "sourcePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/arbitration/ArbitrableTransaction.sol",
  "ast": {
    "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/arbitration/ArbitrableTransaction.sol",
    "exportedSymbols": {
      "ArbitrableTransaction": [
        1749
      ]
    },
    "id": 1750,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1635,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "169:24:6"
      },
      {
        "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/arbitration/TwoPartyArbitrable.sol",
        "file": "./TwoPartyArbitrable.sol",
        "id": 1636,
        "nodeType": "ImportDirective",
        "scope": 1750,
        "sourceUnit": 2935,
        "src": "194:34:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1637,
              "name": "TwoPartyArbitrable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2934,
              "src": "523:18:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TwoPartyArbitrable_$2934",
                "typeString": "contract TwoPartyArbitrable"
              }
            },
            "id": 1638,
            "nodeType": "InheritanceSpecifier",
            "src": "523:18:6"
          }
        ],
        "contractDependencies": [
          161,
          2934
        ],
        "contractKind": "contract",
        "documentation": "@title Arbitrable Transaction\n This is a a contract for an arbitrated transaction which can be reversed by the arbitrator.\n This can be used for buying goods, services and for paying freelancers.\n Party A is the payer. Party B is the payee.",
        "fullyImplemented": true,
        "id": 1749,
        "linearizedBaseContracts": [
          1749,
          2934,
          161
        ],
        "name": "ArbitrableTransaction",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1641,
            "name": "RULING_OPTIONS",
            "nodeType": "VariableDeclaration",
            "scope": 1749,
            "src": "548:62:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1639,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "548:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5265696d6275727365207061727479413b50617920706172747942",
              "id": 1640,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "581:29:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_dfa08ec6588a3d8f89e09209c6c214f977ae24abc50ffbe2557bea9c98769f80",
                "typeString": "literal_string \"Reimburse partyA;Pay partyB\""
              },
              "value": "Reimburse partyA;Pay partyB"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1643,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 1749,
            "src": "621:18:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1642,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "621:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1668,
              "nodeType": "Block",
              "src": "1345:34:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1663,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1643,
                      "src": "1355:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1664,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6635,
                        "src": "1363:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1363:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1355:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1667,
                  "nodeType": "ExpressionStatement",
                  "src": "1355:17:6"
                }
              ]
            },
            "documentation": "@dev Constructor. Choose the arbitrator. Should be called by party A (the payer).\n @param _arbitrator The arbitrator of the contract.\n @param _hashContract Keccak hash of the plain English contract.\n @param _timeout Time after which a party automatically loose a dispute.\n @param _partyB The recipient of the transaction.\n @param _arbitratorExtraData Extra data for the arbitrator.",
            "id": 1669,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1656,
                    "name": "_arbitrator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1645,
                    "src": "1272:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$1869",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1657,
                    "name": "_hashContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1647,
                    "src": "1284:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1658,
                    "name": "_timeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1649,
                    "src": "1298:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1659,
                    "name": "_partyB",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1651,
                    "src": "1307:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1660,
                    "name": "_arbitratorExtraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1653,
                    "src": "1315:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 1661,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1655,
                  "name": "TwoPartyArbitrable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2934,
                  "src": "1253:18:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TwoPartyArbitrable_$2934_$",
                    "typeString": "type(contract TwoPartyArbitrable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1253:83:6"
              }
            ],
            "name": "ArbitrableTransaction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1645,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1669,
                  "src": "1146:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$1869",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1644,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1869,
                    "src": "1146:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$1869",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1647,
                  "name": "_hashContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 1669,
                  "src": "1170:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1646,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1170:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1649,
                  "name": "_timeout",
                  "nodeType": "VariableDeclaration",
                  "scope": 1669,
                  "src": "1193:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1648,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1193:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1651,
                  "name": "_partyB",
                  "nodeType": "VariableDeclaration",
                  "scope": 1669,
                  "src": "1208:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1653,
                  "name": "_arbitratorExtraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 1669,
                  "src": "1225:26:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1145:107:6"
            },
            "payable": true,
            "returnParameters": {
              "id": 1662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1345:0:6"
            },
            "scope": 1749,
            "src": "1115:264:6",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1684,
              "nodeType": "Block",
              "src": "1514:58:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1677,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1643,
                        "src": "1540:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1674,
                        "name": "partyB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2540,
                        "src": "1524:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1524:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1524:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1679,
                  "nodeType": "ExpressionStatement",
                  "src": "1524:23:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1680,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1643,
                      "src": "1557:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1564:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1557:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1683,
                  "nodeType": "ExpressionStatement",
                  "src": "1557:8:6"
                }
              ]
            },
            "documentation": "@dev Pay the party B. To be called when the good is delivered or the service rendered.",
            "id": 1685,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1672,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1671,
                  "name": "onlyPartyA",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2579,
                  "src": "1503:10:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1503:10:6"
              }
            ],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1500:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 1673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1514:0:6"
            },
            "scope": 1749,
            "src": "1488:84:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1708,
              "nodeType": "Block",
              "src": "1798:130:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1693,
                          "name": "_amountReimbursed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1687,
                          "src": "1816:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1694,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1643,
                          "src": "1835:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1816:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6638,
                        6639
                      ],
                      "referencedDeclaration": 6638,
                      "src": "1808:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1808:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1697,
                  "nodeType": "ExpressionStatement",
                  "src": "1808:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1701,
                        "name": "_amountReimbursed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1687,
                        "src": "1868:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1698,
                        "name": "partyA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2538,
                        "src": "1852:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1852:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1852:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1703,
                  "nodeType": "ExpressionStatement",
                  "src": "1852:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1704,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1643,
                      "src": "1896:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1705,
                      "name": "_amountReimbursed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1687,
                      "src": "1904:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1896:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1707,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:25:6"
                }
              ]
            },
            "documentation": "@dev Reimburse party A. To be called if the good or service can't be fully provided.\n @param _amountReimbursed Amount to reimburse in wei.",
            "id": 1709,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1690,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1689,
                  "name": "onlyPartyB",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2590,
                  "src": "1787:10:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1787:10:6"
              }
            ],
            "name": "reimburse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1687,
                  "name": "_amountReimbursed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "1763:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1686,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1762:24:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 1691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1798:0:6"
            },
            "scope": 1749,
            "src": "1744:184:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1747,
              "nodeType": "Block",
              "src": "2334:228:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1719,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1711,
                        "src": "2364:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1720,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1713,
                        "src": "2375:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1716,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6687,
                        "src": "2344:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ArbitrableTransaction_$1749",
                          "typeString": "contract super ArbitrableTransaction"
                        }
                      },
                      "id": 1718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeRuling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2933,
                      "src": "2344:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2344:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1722,
                  "nodeType": "ExpressionStatement",
                  "src": "2344:39:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1723,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1713,
                      "src": "2397:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1724,
                      "name": "PARTY_A_WINS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2562,
                      "src": "2406:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2397:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1732,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1713,
                        "src": "2470:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1733,
                        "name": "PARTY_B_WINS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2565,
                        "src": "2479:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2470:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 1741,
                    "nodeType": "IfStatement",
                    "src": "2466:58:6",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1738,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1643,
                            "src": "2517:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1735,
                            "name": "partyB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2540,
                            "src": "2505:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "send",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2505:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 1739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2505:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1740,
                      "nodeType": "ExpressionStatement",
                      "src": "2505:19:6"
                    }
                  },
                  "id": 1742,
                  "nodeType": "IfStatement",
                  "src": "2393:131:6",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1729,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1643,
                          "src": "2444:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1726,
                          "name": "partyA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2538,
                          "src": "2432:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "send",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2432:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) returns (bool)"
                        }
                      },
                      "id": 1730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2432:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1731,
                    "nodeType": "ExpressionStatement",
                    "src": "2432:19:6"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1743,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1643,
                      "src": "2547:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2554:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2547:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1746,
                  "nodeType": "ExpressionStatement",
                  "src": "2547:8:6"
                }
              ]
            },
            "documentation": "@dev Execute a ruling of a dispute. It reimburse the fee to the winning party.\n This need to be extended by contract inheriting from it.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling Ruling given by the arbitrator. 1 : Reimburse the partyA. 2 : Pay the partyB.",
            "id": 1748,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1711,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1748,
                  "src": "2294:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1710,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2294:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1713,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 1748,
                  "src": "2311:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1712,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2311:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2293:31:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 1715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2334:0:6"
            },
            "scope": 1749,
            "src": "2271:291:6",
            "stateMutability": "nonpayable",
            "superFunction": 2933,
            "visibility": "internal"
          }
        ],
        "scope": 1750,
        "src": "489:2086:6"
      }
    ],
    "src": "169:2409:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/arbitration/ArbitrableTransaction.sol",
    "exportedSymbols": {
      "ArbitrableTransaction": [
        1749
      ]
    },
    "id": 1750,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1635,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "169:24:6"
      },
      {
        "absolutePath": "/Users/samvitello/kleros/kleros-interaction/contracts/standard/arbitration/TwoPartyArbitrable.sol",
        "file": "./TwoPartyArbitrable.sol",
        "id": 1636,
        "nodeType": "ImportDirective",
        "scope": 1750,
        "sourceUnit": 2935,
        "src": "194:34:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1637,
              "name": "TwoPartyArbitrable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2934,
              "src": "523:18:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TwoPartyArbitrable_$2934",
                "typeString": "contract TwoPartyArbitrable"
              }
            },
            "id": 1638,
            "nodeType": "InheritanceSpecifier",
            "src": "523:18:6"
          }
        ],
        "contractDependencies": [
          161,
          2934
        ],
        "contractKind": "contract",
        "documentation": "@title Arbitrable Transaction\n This is a a contract for an arbitrated transaction which can be reversed by the arbitrator.\n This can be used for buying goods, services and for paying freelancers.\n Party A is the payer. Party B is the payee.",
        "fullyImplemented": true,
        "id": 1749,
        "linearizedBaseContracts": [
          1749,
          2934,
          161
        ],
        "name": "ArbitrableTransaction",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1641,
            "name": "RULING_OPTIONS",
            "nodeType": "VariableDeclaration",
            "scope": 1749,
            "src": "548:62:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 1639,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "548:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5265696d6275727365207061727479413b50617920706172747942",
              "id": 1640,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "581:29:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_dfa08ec6588a3d8f89e09209c6c214f977ae24abc50ffbe2557bea9c98769f80",
                "typeString": "literal_string \"Reimburse partyA;Pay partyB\""
              },
              "value": "Reimburse partyA;Pay partyB"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1643,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 1749,
            "src": "621:18:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1642,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "621:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1668,
              "nodeType": "Block",
              "src": "1345:34:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1663,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1643,
                      "src": "1355:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1664,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6635,
                        "src": "1363:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1363:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1355:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1667,
                  "nodeType": "ExpressionStatement",
                  "src": "1355:17:6"
                }
              ]
            },
            "documentation": "@dev Constructor. Choose the arbitrator. Should be called by party A (the payer).\n @param _arbitrator The arbitrator of the contract.\n @param _hashContract Keccak hash of the plain English contract.\n @param _timeout Time after which a party automatically loose a dispute.\n @param _partyB The recipient of the transaction.\n @param _arbitratorExtraData Extra data for the arbitrator.",
            "id": 1669,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1656,
                    "name": "_arbitrator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1645,
                    "src": "1272:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$1869",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1657,
                    "name": "_hashContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1647,
                    "src": "1284:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1658,
                    "name": "_timeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1649,
                    "src": "1298:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1659,
                    "name": "_partyB",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1651,
                    "src": "1307:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1660,
                    "name": "_arbitratorExtraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1653,
                    "src": "1315:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 1661,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1655,
                  "name": "TwoPartyArbitrable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2934,
                  "src": "1253:18:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TwoPartyArbitrable_$2934_$",
                    "typeString": "type(contract TwoPartyArbitrable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1253:83:6"
              }
            ],
            "name": "ArbitrableTransaction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1645,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1669,
                  "src": "1146:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$1869",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1644,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1869,
                    "src": "1146:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$1869",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1647,
                  "name": "_hashContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 1669,
                  "src": "1170:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1646,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1170:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1649,
                  "name": "_timeout",
                  "nodeType": "VariableDeclaration",
                  "scope": 1669,
                  "src": "1193:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1648,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1193:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1651,
                  "name": "_partyB",
                  "nodeType": "VariableDeclaration",
                  "scope": 1669,
                  "src": "1208:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1653,
                  "name": "_arbitratorExtraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 1669,
                  "src": "1225:26:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1145:107:6"
            },
            "payable": true,
            "returnParameters": {
              "id": 1662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1345:0:6"
            },
            "scope": 1749,
            "src": "1115:264:6",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1684,
              "nodeType": "Block",
              "src": "1514:58:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1677,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1643,
                        "src": "1540:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1674,
                        "name": "partyB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2540,
                        "src": "1524:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1524:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1524:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1679,
                  "nodeType": "ExpressionStatement",
                  "src": "1524:23:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1680,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1643,
                      "src": "1557:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1564:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1557:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1683,
                  "nodeType": "ExpressionStatement",
                  "src": "1557:8:6"
                }
              ]
            },
            "documentation": "@dev Pay the party B. To be called when the good is delivered or the service rendered.",
            "id": 1685,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1672,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1671,
                  "name": "onlyPartyA",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2579,
                  "src": "1503:10:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1503:10:6"
              }
            ],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1500:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 1673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1514:0:6"
            },
            "scope": 1749,
            "src": "1488:84:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1708,
              "nodeType": "Block",
              "src": "1798:130:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1693,
                          "name": "_amountReimbursed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1687,
                          "src": "1816:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1694,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1643,
                          "src": "1835:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1816:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6638,
                        6639
                      ],
                      "referencedDeclaration": 6638,
                      "src": "1808:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1808:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1697,
                  "nodeType": "ExpressionStatement",
                  "src": "1808:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1701,
                        "name": "_amountReimbursed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1687,
                        "src": "1868:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1698,
                        "name": "partyA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2538,
                        "src": "1852:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1852:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1852:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1703,
                  "nodeType": "ExpressionStatement",
                  "src": "1852:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1704,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1643,
                      "src": "1896:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1705,
                      "name": "_amountReimbursed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1687,
                      "src": "1904:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1896:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1707,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:25:6"
                }
              ]
            },
            "documentation": "@dev Reimburse party A. To be called if the good or service can't be fully provided.\n @param _amountReimbursed Amount to reimburse in wei.",
            "id": 1709,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1690,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1689,
                  "name": "onlyPartyB",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2590,
                  "src": "1787:10:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1787:10:6"
              }
            ],
            "name": "reimburse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1687,
                  "name": "_amountReimbursed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "1763:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1686,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1762:24:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 1691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1798:0:6"
            },
            "scope": 1749,
            "src": "1744:184:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1747,
              "nodeType": "Block",
              "src": "2334:228:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1719,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1711,
                        "src": "2364:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1720,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1713,
                        "src": "2375:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1716,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6687,
                        "src": "2344:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ArbitrableTransaction_$1749",
                          "typeString": "contract super ArbitrableTransaction"
                        }
                      },
                      "id": 1718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeRuling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2933,
                      "src": "2344:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2344:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1722,
                  "nodeType": "ExpressionStatement",
                  "src": "2344:39:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1723,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1713,
                      "src": "2397:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1724,
                      "name": "PARTY_A_WINS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2562,
                      "src": "2406:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2397:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1732,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1713,
                        "src": "2470:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1733,
                        "name": "PARTY_B_WINS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2565,
                        "src": "2479:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2470:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 1741,
                    "nodeType": "IfStatement",
                    "src": "2466:58:6",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1738,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1643,
                            "src": "2517:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1735,
                            "name": "partyB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2540,
                            "src": "2505:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "send",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2505:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 1739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2505:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1740,
                      "nodeType": "ExpressionStatement",
                      "src": "2505:19:6"
                    }
                  },
                  "id": 1742,
                  "nodeType": "IfStatement",
                  "src": "2393:131:6",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1729,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1643,
                          "src": "2444:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1726,
                          "name": "partyA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2538,
                          "src": "2432:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "send",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2432:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) returns (bool)"
                        }
                      },
                      "id": 1730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2432:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1731,
                    "nodeType": "ExpressionStatement",
                    "src": "2432:19:6"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1743,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1643,
                      "src": "2547:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2554:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2547:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1746,
                  "nodeType": "ExpressionStatement",
                  "src": "2547:8:6"
                }
              ]
            },
            "documentation": "@dev Execute a ruling of a dispute. It reimburse the fee to the winning party.\n This need to be extended by contract inheriting from it.\n @param _disputeID ID of the dispute in the Arbitrator contract.\n @param _ruling Ruling given by the arbitrator. 1 : Reimburse the partyA. 2 : Pay the partyB.",
            "id": 1748,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1711,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1748,
                  "src": "2294:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1710,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2294:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1713,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 1748,
                  "src": "2311:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1712,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2311:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2293:31:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 1715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2334:0:6"
            },
            "scope": 1749,
            "src": "2271:291:6",
            "stateMutability": "nonpayable",
            "superFunction": 2933,
            "visibility": "internal"
          }
        ],
        "scope": 1750,
        "src": "489:2086:6"
      }
    ],
    "src": "169:2409:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-12T16:57:03.224Z"
}